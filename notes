Each engine (at launch time) gets its failure time calculated according to the appropriate bathtub-curved Poisson process, for each of the possible failure modes.  Then, during burn cycle, we just have to tick forward and see if we've passed any new failure events and if so apply them.
Each engine also records the du for that engine-type at launch time and adds to it while it burns; then the engine-type du is max(engine du for engine in engine-type).

Bathtub curves: defined piecewise.  f*(t) := f(t) / P(T ≥ t) is instantaneous failure probability (1 / 2MTBF), because the failure has to happen _somewhere_ in the range: P(T < 2B + 5) = 1.
Infant mortality: 0 ≤ t < 5, f(t) = λe^(-λt), P(T < t) = 1 - e^(-λt).
  Thus P(T < 5) = 1 - e^(-5λ),
    so e^(-5λ) = 1 - P(T < 5),
    so -5λ = ln(1 - P(T < 5)),
    so λ = -⅕ln(1 - P(T < 5))
  f*(t) = λe^(-λt) / e^(-λt) = λ
Flat region: 5 ≤ t < B + 5, f(t) = κe^(-κ(t - 5)), P(T < t | T ≥ 5) = 1 - e^(-κ(t - 5)).
  κ = -ln(1 - P(T < B + 5 | T ≥ 5)) / B
  f*(t) = κ
Old age: B + 5 ≤ t < 2B + 5, f(t) = 1 / B, P (T < t | T ≥ B + 5) = (t - B - 5) / B
  Thus P(T < 2B + 5 | T ≥ B + 5) = B / B = 1 (ok)
  f*(t) = 1 / (2B + 5 - t)
  so f*(B + 5) = 1 / B
  and f*(2B + 5) is infinite

Porch curves: also defined piecewise.
Infant mortality: as before
Flat region: 5 ≤ t, f(t) = κe^(-κ(t - 5)), P(T < t | T ≥ 5) = 1 - e^(-κ(t - 5)).
  κ = -ln(1 - P(T < B + 5 | T ≥ 5)) / B
  f*(t) = κ

Failure modes (with P(T < 5) and P(T < B + 5 | T ≥ 5) given in terms of p = 1 - cycleReliability:
Transient shutdown: Porch 0.05p, 0.25p  Engine stops but doesn't wipe out remaining ignitions.
Permanent shutdown: Bathtub 0.03p, 0.15p.  Engine stops and is now dead (⅓ chance of explosion).
Performance loss: Porch 0.04p, 0.25p.  Isp reduced by factor ~ U[0.4, 0.6].
Thrust loss: Porch 0.03p, 0.2p.  Thrust reduced by factor ~ U[0.4, 0.6].
TOTALS: 0.15p + 0.85p = p
Ignition failure: event, driven by ignitionReliability.  Doesn't wipe out remaining ignitions.

Optionally, can give engines an Extra Preflight Check; doubles cost, reduces failures (within burntime) by 25%.
Optionally, can add Extra Telemetry to engines; doubles cost, doubles dataRate.
(With both, the multipliers add; i.e. 3x cost, not 4x.)

Fraternal damage: if an engine explodes, all other engines running at the time get a reroll: compute a new failure time (with t = 0 at the point of the explosion), take whichever failure-time is sooner.
