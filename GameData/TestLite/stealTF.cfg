/* This is a horrible hack to steal all the TF configs.
 * Later, we can get RO to create TestLite configs instead of TF configs.
 */

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}

@PART[*]:HAS[@MODULE[TestFlightReliability],@MODULE[FlightDataRecorder_Engine]]:AFTER[zTestFlight]
{
	@MODULE[TestFlightReliability],0
	{
		@name = ModuleTestLite
		// leave 'configuration' intact
		%maxData = 10000
		%techTransferMax = 2000
		%techTransfer = #$../MODULE[TestFlightCore],0/techTransfer$
		%dataRate = #$../MODULE[FlightDataRecorder_Engine],0/flightDataMultiplier$
		%ratedBurnTime = #$../MODULE[TestFlightReliability_EngineCycle],0/ratedBurnTime$
		// can't get tTGP, because there might not be one :(
		//%techTransferGenerationPenalty = #$../MODULE[TestFlightCore],0/techTransferGenerationPenalty$
	}
	/* Remove the TF cfgs we just processed */
	!MODULE[TestFlightCore],0 {}
	!MODULE[FlightDataRecorder_Engine],0 {}
	!MODULE[TestFlightReliability_EngineCycle],0 {}
}
